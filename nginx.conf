# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/

worker_processes 1;
error_log /dev/stdout info;
pid /run/nginx.pid;
daemon off;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log 		/dev/stdout main;
    client_body_temp_path /tmp;
    fastcgi_temp_path /tmp;
    scgi_temp_path /tmp;
    proxy_temp_path /tmp;
    uwsgi_temp_path /tmp;
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen       8080 default_server;
        server_name  _;
        root         /usr/share/nginx/html;
        port_in_redirect off;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location /health {
            add_header Content-Type text/plain;
            return 200 'OK';
        }

        location /latest-launcher-template {
            return 301 https://raw.githubusercontent.com/fabric8-launcher/launcher-openshift-templates/v15/openshift/launcher-template.yaml;
        }

        # Redirects from the old URLs generated by the boosters
        location ~* /docs/mission-([^/]+)-(wf-swarm|vertx).html {
            return 301 /docs/$2-runtime.html#mission-$1-$2;
        }

        # Spring Boot has custom renaming
        location ~* /docs/mission-([^/]+)-spring-boot-tomcat.html {
            return 301 /docs/spring-boot-runtime.html#mission-$1-spring-boot-tomcat;
        }
        
        location /redirect {

            #community links
            
            # e.g. /redirect?version=community&runtime=spring-boot&mission=crud
            if ($args ~ "version=community&runtime=spring-boot") {
                return 301 /docs/spring-boot-runtime.html#mission-$arg_mission-spring-boot;
            }
            
            # e.g. /redirect?version=community&runtime=vert.x&mission=crud
            if ($args ~ "version=community&runtime=vert.x") {
                return 301 /docs/vertx-runtime.html#mission-$arg_mission-vertx;
            }
            
            # e.g. /redirect?version=community&runtime=wildfly-swarm&mission=crud
            if ($args ~ "version=community&runtime=wildfly-swarm") {
                return 301 /docs/wf-swarm-runtime.html#mission-$arg_mission-wf-swarm;
            }
            
            # e.g. /redirect?version=community&runtime=nodejs&mission=crud
            if ($args ~ "version=community&runtime=nodejs") {
                return 301 /docs/nodejs-runtime.html#mission-$arg_mission-nodejs;
            }
            
            # downstream links
            
            # e.g. /redirect?version=rhoar&runtime=spring-boot&mission=crud
            if ($args ~ "version=rhoar&runtime=spring-boot") {
                return 301 https://access.redhat.com/documentation/en-us/red_hat_openshift_application_runtimes/1/html-single/spring_boot_runtime_guide/#mission-$arg_mission-spring-boot-tomcat;
            }
            
            # e.g. /redirect?version=rhoar&runtime=vert.x&mission=crud
            if ($args ~ "version=rhoar&runtime=vert.x") {
                return 301 https://access.redhat.com/documentation/en-us/red_hat_openshift_application_runtimes/1/html-single/eclipse_vert.x_runtime_guide/#mission-$arg_mission-vertx;
            }
            
            # e.g. /redirect?version=rhoar&runtime=wildfly-swarm&mission=crud
            if ($args ~ "version=rhoar&runtime=wildfly-swarm") {
                return 301 https://access.redhat.com/documentation/en-us/red_hat_openshift_application_runtimes/1/html-single/wildfly_swarm_runtime_guide/#mission-$arg_mission-wf-swarm;
            }
            
            # e.g. /redirect?version=rhoar&runtime=nodejs&mission=crud
            if ($args ~ "version=rhoar&runtime=nodejs") {
                return 301 https://access.redhat.com/documentation/en-us/red_hat_openshift_application_runtimes/1/html-single/node.js_runtime_guide/#mission-$arg_mission-nodejs;
            }
            
            return 301 /;
        }
        
        # This is added to support pushState URL patterm
        # Redirecting every 404 to angular APP and 
        # let the APP handle
        error_page 404 =200 /index.html;

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }

        gzip            on;
        gzip_min_length 1000;
        gzip_comp_level 9;
        gzip_proxied    expired no-cache no-store private auth;
        gzip_types      text/plain text/css application/javascript application/xml;
    }

# Settings for a TLS enabled server.
# - we dont do TLS here, offload that to the openshift edge instead

}

